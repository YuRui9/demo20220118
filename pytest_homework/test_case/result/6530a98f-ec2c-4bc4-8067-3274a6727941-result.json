{"name": "test_01_shopping", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"J_IptAmount\"]\"}\n  (Session info: chrome=96.0.4664.110)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x011565C3+2516419]\n\tOrdinal0 [0x010EFAA1+2095777]\n\tOrdinal0 [0x00FF2698+1058456]\n\tOrdinal0 [0x0101D2A8+1233576]\n\tOrdinal0 [0x0101D49B+1234075]\n\tOrdinal0 [0x01047672+1406578]\n\tOrdinal0 [0x0103637A+1336186]\n\tOrdinal0 [0x01045A1F+1399327]\n\tOrdinal0 [0x0103620B+1335819]\n\tOrdinal0 [0x010125E7+1189351]\n\tOrdinal0 [0x01013449+1193033]\n\tGetHandleVerifier [0x012E3AA4+1573796]\n\tGetHandleVerifier [0x0138D8E7+2269671]\n\tGetHandleVerifier [0x011E491B+528923]\n\tGetHandleVerifier [0x011E3D69+525929]\n\tOrdinal0 [0x010F50A9+2117801]\n\tOrdinal0 [0x010F9458+2135128]\n\tOrdinal0 [0x010F9592+2135442]\n\tOrdinal0 [0x011030F1+2175217]\n\tBaseThreadInitThunk [0x75C0FA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x77D17A9E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77D17A6E+238]", "trace": "self = <pytest_homework.test_case.test_pytest.TestTaoBao object at 0x000001F47D607F40>\nbroswer = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e775ce58dd33c62b1fc26ed9f8f58bf2\")>\n\n    def test_01_shopping(self, broswer):\n        gs = GoodsSale(broswer)\n>       result = gs.shopping()\n\ntest_pytest.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\logic\\shopping_tb.py:43: in shopping\n    self.locator_list(allPage.page_goodsDetail_num).clear()\n..\\key_word\\keyword_web.py:41: in locator_list\n    el = self.driver.find_element(list[0], list[1])\nC:\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1244: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\nC:\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:424: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001F47D607B80>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77D17A9E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77D17A6E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"J_IptAmount\"]\"}\nE         (Session info: chrome=96.0.4664.110)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x011565C3+2516419]\nE       \tOrdinal0 [0x010EFAA1+2095777]\nE       \tOrdinal0 [0x00FF2698+1058456]\nE       \tOrdinal0 [0x0101D2A8+1233576]\nE       \tOrdinal0 [0x0101D49B+1234075]\nE       \tOrdinal0 [0x01047672+1406578]\nE       \tOrdinal0 [0x0103637A+1336186]\nE       \tOrdinal0 [0x01045A1F+1399327]\nE       \tOrdinal0 [0x0103620B+1335819]\nE       \tOrdinal0 [0x010125E7+1189351]\nE       \tOrdinal0 [0x01013449+1193033]\nE       \tGetHandleVerifier [0x012E3AA4+1573796]\nE       \tGetHandleVerifier [0x0138D8E7+2269671]\nE       \tGetHandleVerifier [0x011E491B+528923]\nE       \tGetHandleVerifier [0x011E3D69+525929]\nE       \tOrdinal0 [0x010F50A9+2117801]\nE       \tOrdinal0 [0x010F9458+2135128]\nE       \tOrdinal0 [0x010F9592+2135442]\nE       \tOrdinal0 [0x011030F1+2175217]\nE       \tBaseThreadInitThunk [0x75C0FA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77D17A9E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77D17A6E+238]\n\nC:\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: NoSuchElementException"}, "steps": [{"name": "用例运行失败，添加失败的截图", "status": "passed", "attachments": [{"name": "失败的截图", "source": "d20034fe-7bcd-44fd-83e8-5915c5a998a2-attachment.png", "type": "image/png"}], "start": 1641220580788, "stop": 1641220581000}], "start": 1641220536170, "stop": 1641220580690, "uuid": "7a6973d2-f999-4d79-89fc-89e81b82a28c", "historyId": "9afa4b9d65ae9dbecff93c5243f54fd3", "testCaseId": "93804220c2547a8faa01bb4d92a858c1", "fullName": "test_pytest.TestTaoBao#test_01_shopping", "labels": [{"name": "suite", "value": "test_pytest"}, {"name": "subSuite", "value": "TestTaoBao"}, {"name": "host", "value": "DESKTOP-O0EB1SU"}, {"name": "thread", "value": "7376-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_pytest"}]}